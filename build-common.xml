<?xml version="1.0" encoding="UTF-8"?>
<project name="AHSlibBuildCommon" basedir=".">
	<macrodef name="ahsPathBin">
		<attribute name="name"/>	<!-- the name to output the new property to -->
		<attribute name="module"/>	<!-- the module name -->
		<attribute name="tree"/>	<!-- the tree name (i.e. 'main' or 'test', typically) -->
		<sequential>
			<property name="@{name}" value="./build/@{module}/@{tree}/bin/"/>
		</sequential>
	</macrodef>
	<macrodef name="ahsPathSrc">
		<attribute name="name"/>	<!-- the name to output the new property to -->
		<attribute name="module"/>	<!-- the module name -->
		<attribute name="tree"/>	<!-- the tree name (i.e. 'main' or 'test', typically) -->
		<sequential>
			<property name="@{name}" value="./@{module}/@{tree}/src/"/>
		</sequential>
	</macrodef>
	
	
	<!-- This macro compiles one source tree (i.e. the main source tree or the unit test source tree) of a given module. -->
	<macrodef name="compiletree">
		<attribute name="module"/>	<!-- the module name -->
		<attribute name="tree"/>	<!-- the tree name (i.e. 'main' or 'test', typically) -->
		<element name="modtreeclasspath" optional="true"/>
		<sequential>
			<echo></echo>
			<echo>Compiling module @{module} (tree @{tree})...</echo>
			<ahsPathBin name="ahslib.compiletree.@{module}.@{tree}.pbuild" module="@{module}" tree="@{tree}"/>
			<ahsPathSrc name="ahslib.compiletree.@{module}.@{tree}.psrc"   module="@{module}" tree="@{tree}"/>
			<echo>$${ahslib.compiletree.@{module}.@{tree}.psrc}   = ${ahslib.compiletree.@{module}.@{tree}.psrc}</echo>
			<echo>$${ahslib.compiletree.@{module}.@{tree}.pbuild} = ${ahslib.compiletree.@{module}.@{tree}.pbuild}</echo>
			
			<mkdir dir="${ahslib.compiletree.@{module}.@{tree}.pbuild}"/>
			<javac
				srcdir="${ahslib.compiletree.@{module}.@{tree}.psrc}"
				destdir="${ahslib.compiletree.@{module}.@{tree}.pbuild}"
				debug="on"
				deprecation="on"
				optimize="on"
				source="1.6"
				target="1.6"
				includeantruntime="false"
				>
				<classpath>
					<modtreeclasspath/>
				</classpath>
				<compilerarg value="-Xlint:unchecked"/>
			</javac>
			<echo>Finished compiling module @{module} (tree @{tree})!</echo>
			<echo></echo>
		</sequential>
	</macrodef>
	
	
	<!-- This macro compiles all source (including unit tests) for a single module.  -->
	<macrodef name="compilemodule">
		<attribute name="module"/>
		<element name="modclasspath" optional="true"/>
		<sequential>
			<ahsPathBin name="ahslib.compilemodule.@{module}.@{tree}.pbuild_main" module="@{module}" tree="main"/>
			<compiletree module="@{module}" tree="main">
				<modtreeclasspath>
					<modclasspath />
				</modtreeclasspath>
			</compiletree>
			<compiletree module="@{module}" tree="test">
				<modtreeclasspath>
					<path location="${pbuild_main}" />	<!-- Add the main classes to the classpath for unit test compilation. -->
					<modclasspath />
				</modtreeclasspath>
			</compiletree>
		</sequential>
	</macrodef>
	
	
	<!-- This macro compiles javadoc for a module tree. -->
	<macrodef name="javadoctree">
		<attribute name="module"/>	<!-- the module name -->
		<attribute name="tree"/>	<!-- the tree name (i.e. 'main' or 'test', typically) -->
		<element name="modtreeclasspath" optional="true"/>
		<sequential>
			
			<javadoc
				destdir="dox/javadoc"
				author="true"
				version="true"
				use="true"
				windowtitle="Test API">
				
				<packageset dir="./core/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				<packageset dir="./codec/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				<packageset dir="./codec.ebon/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				<packageset dir="./codec.json/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				<packageset dir="./io/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				<!--
				<packageset dir="./log/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				-->
				<packageset dir="./thread/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				<!--
				<packageset dir="./scratch/main/src/" defaultexcludes="yes">
					<include name="**"/>
				</packageset>
				-->
				
				<!--<doctitle><![CDATA[<h1>Herp</h1>]]></doctitle>-->
				<!--<bottom><![CDATA[<i>Derp.</i>]]></bottom>-->
				<group title="Codec Core"	packages="us.exultant.ahs.io.codec*"/>
				<group title="Codec (JSON)"	packages="us.exultant.ahs.io.codec.json*"/>
				<group title="Codec (EBON)"	packages="us.exultant.ahs.io.codec.ebon*"/>
				<group title="IO"		packages="us.exultant.ahs.io*"/>
				<group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/>
			</javadoc>
		</sequential>
	</macrodef>
</project>
