<?xml version="1.0" encoding="UTF-8"?>
<project name="AHSlib" basedir="." default="">
	<description>
		The "And How Simple!" library provides open-source Java 
		solutions for rapid development of applications utilizing
		networking, serialization/persistence, concurrency control, and
		thread scheduling, tested for both stability and performance
		and with an abundance of abstract interfaces that made it
		sufficient to provide services to a diverse range of projects.
	</description>

	<macrodef name="ahsPathBin">
		<attribute name="name"/>	<!-- the name to output the new property to -->
		<attribute name="module"/>	<!-- the module name -->
		<attribute name="tree"/>	<!-- the tree name (i.e. 'main' or 'test', typically) -->
		<sequential>
			<property name="@{name}" value="./build/@{module}/@{tree}/bin/"/>
		</sequential>
	</macrodef>
	<macrodef name="ahsPathSrc">
		<attribute name="name"/>	<!-- the name to output the new property to -->
		<attribute name="module"/>	<!-- the module name -->
		<attribute name="tree"/>	<!-- the tree name (i.e. 'main' or 'test', typically) -->
		<sequential>
			<property name="@{name}" value="./@{module}/@{tree}/src/"/>
		</sequential>
	</macrodef>
	
	<!-- This macro compiles one source tree (i.e. the main source tree or the unit test source tree) of a given module. -->
	<macrodef name="compiletree">
		<attribute name="module"/>	<!-- the module name -->
		<attribute name="tree"/>	<!-- the tree name (i.e. 'main' or 'test', typically) -->
		<element name="modclasspath" optional="true"/>
		<sequential>
			<ahsPathBin name="pbuild" module="@{module}" tree="@{tree}"/>
			<ahsPathSrc name="psrc"   module="@{module}" tree="@{tree}"/>
			<mkdir dir="@{pbuild}"/>
			<javac
				srcdir="@{psrc}"
				destdir="@{pbuild}"
				debug="on"
				deprecation="on"
				optimize="on"
				source="1.6"
				target="1.6"
				>
				<classpath>
					<modclasspath/>
					<path refid="base.path"/>
				</classpath>
				<compilerarg value="-Xlint:unchecked"/>
			</javac>
		</sequential>
	</macrodef>
	
	<!-- This macro compiles all source (including unit tests) for a single module.  -->
	<macrodef name="compilemodule">
		<attribute name="module"/>
		<element name="modclasspath" optional="true"/>
		<sequential>
			<ahsPathBin name="pbuild_main" module="@{module}" tree="main"/>
			<compiletree module="@{name}" tree="main">
				<modclasspath>
					<modclasspath />
				</modclasspath>
			</compiletree>
			<compiletree module="@{name}" tree="test">
				<modclasspath>
					<path location="@{pbuild_main}" />	<!-- Add the main classes to the classpath for unit test compilation. -->
					<modclasspath />
				</modclasspath>
			</compiletree>
		</sequential>
	</macrodef>
</project>
