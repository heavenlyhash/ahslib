
// WorkSchedulerFlexiblePriorityBins would work by just keeping several time-sorted heaps, one for each priority bin.  the bins are simply defined as integer ranges, so its essentially compatable with all the same WorkTarget interfaces.  the main advantage of using this system would be to avoid starvation of low priority WorkTargets when high priority WorkTargets never cease to have work ready, since one could specify a ratio at which each bin should be attended (but then this example problem could also be fixed by simply making sure that the design does not produce infinite amounts of high priority work per unit of low priority work (and the standard suggestions for high priority output, medium priority processing, and low priority input acceptance does this already)).
